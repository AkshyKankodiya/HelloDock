name: HelloDock Playwright Tests2

on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: Select The Environment URL
        options:
          - https://dev.hellodock.com/
          - https://qa.hellodock.com/
          - https://app.hellodock.com/

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm install

      - name: Install Playwright browsers
        run: npx playwright install

      - name: Run Playwright tests
        env:
          BASE_URL: ${{ github.event.inputs.choice }}  # Pass the selected URL to the tests
        run: npx playwright test || true

      ## Allure report 
      - name: Generate Allure Report
        run: |
          npm install -g allure-commandline
          allure generate allure-results -o allure-report --clean

      ## Serve Allure Report and capture output
      - name: Serve Allure Report
        id: serve-report
        run: |
          npx allure serve allure-results | tee allure-serve-output.txt
          echo "Report served. Check the output log for the URL."

      ## Extract URL from the log file
      - name: Extract Allure Report URL
        id: extract-url
        run: |
          echo "Extracting Allure Report URL..."
          url=$(grep -o 'http://[^ ]*' allure-serve-output.txt | tail -n 1)
          echo "Allure Report URL: $url"
          echo "report_url=$url" >> $GITHUB_ENV

      ## Deploy step       
      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} 
          publish_dir: ./allure-report
          publish_branch: allure-report
          keep_files: false

      # Upload the entire test results folder as an artifact
      - name: Upload Playwright test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/test-results/**'

      - name: Get Build URL
        run: |
          echo "The Build URL is: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      # Send email notification after the build completes
      - name: Send email notification
        if: always()  # Ensures email is sent regardless of build success or failure
        uses: dawidd6/action-send-mail@v3
        with:
          from: Rahul <no-reply@hellodock.com>
          to: rahul.trello2020@gmail.com
          subject: Playwright Build Completed
          body: |
            Hello Rahul,

            The build process for your Playwright TypeScript project has completed. Please check the results.

            Build URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

            Allure Report URL: ${{ env.report_url }}

            Thanks,
            HelloDock Automation Team
          server_address: email-smtp.us-east-2.amazonaws.com  # Corrected parameter name
          server_port: 587                                # Corrected parameter name
          username: ${{ secrets.SMTP_USER }}              # Corrected parameter name
          password: ${{ secrets.SMTP_PASSWORD }}          # Corrected parameter name
          secure: false
