name: HelloDock Playwright Tests

on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: Select The Environment URL
        options:
          - https://dev.hellodock.com/
          - https://qa.hellodock.com/
          - https://app.hellodock.com/

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'  # Downgrade to Node.js 18 for compatibility

      - name: Install dependencies
        run: npm install

      - name: Install Playwright browsers
        run: npx playwright install

      - name: Run Playwright tests
        env:
          BASE_URL: ${{ github.event.inputs.choice }}
        run: |
          npx playwright test --reporter=line,allure-playwright || true

      ## Ensure Allure results are generated
      - name: Check Allure Results Directory
        run: |
          if (-Not (Test-Path -Path ./allure-results)) {
            throw "The allure-results directory does not exist!"
          }

      ## Install Allure and ngrok, then serve Allure Report
      - name: Install Allure Commandline
        run: npm install -g allure-commandline@2.13.8  # Use specific version

      - name: Generate Allure Report
        run: allure generate ./allure-results --clean -o ./allure-report

      ## Install and Start Ngrok
      - name: Install ngrok
        run: npm install -g ngrok

      - name: Start Ngrok Tunnel for Allure Report
        shell: powershell
        run: |
          ngrok http 5252 &  # Expose the port for ngrok
          Start-Sleep -Seconds 10  # Wait for ngrok to start
          $ngrokApiUrl = "http://127.0.0.1:4040/api/tunnels"
          try {
            $ngrokUrl = (Invoke-RestMethod -Uri $ngrokApiUrl).tunnels[0].public_url
            Write-Host "Ngrok tunnel established at: $ngrokUrl"
            echo "::set-output name=allure_report_url::$ngrokUrl"
          }
          catch {
            Write-Host "Failed to establish ngrok tunnel. Check ngrok logs."
            throw
          }

      ## Upload the results as artifacts
      - name: Upload Playwright test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/test-results/**'

      - name: Upload Allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results/

      - name: Get Build URL
        run: |
          echo "The Build URL is: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      ## Send email notification with Allure link
      - name: Send email notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          from: Rahul <no-reply@hellodock.com>
          to: rahul.trello2020@gmail.com
          subject: Playwright Build Completed
          body: |
            Hello Rahul,

            The build process for your Playwright TypeScript project has completed. Please check the results.

            - Build URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            - Allure Report: ${{ steps.start_ngrok.outputs.allure_report_url }}

            Thanks,
            HelloDock Automation Team
          server_address: email-smtp.us-east-2.amazonaws.com
          server_port: 587
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASSWORD }}
          secure: false
