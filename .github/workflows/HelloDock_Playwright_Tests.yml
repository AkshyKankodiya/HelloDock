name: HelloDock Smoke Test suite

on:
  schedule:
    - cron: "*/10 * * * *"

   #- cron: "30 17 * * *"
   #- cron: "0 * * * *"
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: Select The Environment URL
        options:
          - https://app.hellodock.com/
          - https://qa.hellodock.com/
          - https://dev.hellodock.com/
        
        

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install

      - name: Install Playwright Allure
        run: npm install --save-dev allure-playwright

      - name: Run Playwright tests
        env:
          BASE_URL: ${{ github.event.inputs.choice }}
        run: |
          npx playwright test exceptions_Test.spec.ts --reporter=line,allure-playwright
        continue-on-error: true
        id: playwright-tests

      - name: Set CC Email for test failures
        if: (steps.playwright-tests.outcome == 'failure')
        run: echo "CC_EMAIL=${{ vars.FAILURE_CC_EMAIL }}" >> $GITHUB_ENV
        shell: bash

      - name: Set CC Email for test successes
        if: (steps.playwright-tests.outcome == 'success')
        run: echo "CC_EMAIL=${{ vars.SUCCESS_CC_EMAIL }}" >> $GITHUB_ENV
        shell: bash

      - name: Upload Playwright test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/test-results/**'

      - name: Upload Allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: ./allure-results

      - name: Send email notification
        if: always()  # Always send the email
        env:
          CC_EMAIL: ${{ env.CC_EMAIL }}  # Use the CC_EMAIL variable set in previous steps
        uses: dawidd6/action-send-mail@v3
        with:
          from: Hellodock Team <no-reply@hellodock.com>
          to: rahul.trello2020@gmail.com
          cc: ${{ env.CC_EMAIL }}  # CC set based on success or failure
          subject: 'Test Automation Build Job Status: ${{ job.status }}'
          body: |
            Hello Team,

            The build process for your smoke test is completed. Please use the link below to view the result.

            Build URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            Allure Report: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ github.run_id }}/
            Environment: ${{ github.env.BASE_URL}}
            
            Thanks,
            HelloDock Automation Team
          server_address: email-smtp.us-east-2.amazonaws.com
          server_port: 587
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASSWORD }}
          secure: false

  publish:
    runs-on: windows-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Allure Results
        uses: actions/download-artifact@v3
        with:
          name: allure-results
          path: allure-results

      - name: Install Allure CLI
        run: |
          npm install -g allure-commandline --save-dev
          allure --version

      - name: Generate Allure Report
        run: |
          allure generate allure-results -o allure-report

      # Ensure the previous history is retained on GitHub Pages
      - name: Deploy to GitHub Pages with unique folder per build
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          destination_dir: "${{ github.run_id }}"  # Use run ID to create a unique folder per build
          

      - name: Print Allure Report URL
        run: |
            echo "Allure report is available at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ github.run_id }}/"
