name: HelloDock Playwright Tests

on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: Select The Environment URL
        options:
          - https://dev.hellodock.com/
          - https://qa.hellodock.com/
          - https://app.hellodock.com/

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'  # Ensure correct Node.js version if needed

      - name: Install dependencies
        run: npm install

      - name: Install Playwright browsers
        run: npx playwright install

      - name: Run Playwright tests
        env:
          BASE_URL: ${{ github.event.inputs.choice }}  # Pass the selected URL to the tests
        run: |
          npx playwright test --reporter=line,allure-playwright || true

      ## Allure report generation
      - name: Install Allure Commandline
        run: npm install -g allure-commandline

      - name: Generate Allure Report
        run: allure generate ./allure-results --clean -o ./allure-report

      ## Deploy step for Allure Report to GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: allure-report
          keep_files: false

      # Upload the entire test results folder as an artifact
      - name: Upload Playwright test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/test-results/**'

      # Upload Allure results as an artifact (optional for storing allure-results)
      - name: Upload Allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results/

      - name: Get Build URL
        run: |
          echo "The Build URL is: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      # Get Allure report link from the deployment branch
      - name: Allure Report Link
        run: |
          echo "The Allure Report is available at: https://${{ github.repository_owner }}.github.io/${{ github.repository }}/allure-report/"

      # Get Artifact download link (zip file of test results)
      - name: Get Artifact Download Link
        run: |
          echo "The test results artifact is available for download at:"
          echo "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifact"

      # Send email notification after the build completes
      - name: Send email notification
        if: always()  # Ensures email is sent regardless of build success or failure
        uses: dawidd6/action-send-mail@v3
        with:
          from: Rahul <no-reply@hellodock.com>
          to: rahul.trello2020@gmail.com
          subject: Playwright Build Completed
          body: |
            Hello Rahul,

            The build process for your Playwright TypeScript project has completed. Please check the results.

            - Build URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            - Allure Report: https://${{ github.repository_owner }}.github.io/${{ github.repository }}/allure-report/
            - Download Test Results Artifact: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifact

            Thanks,
            HelloDock Automation Team
          server_address: email-smtp.us-east-2.amazonaws.com  # Corrected parameter name
          server_port: 587                                   # Corrected parameter name
          username: ${{ secrets.SMTP_USER }}                 # Corrected parameter name
          password: ${{ secrets.SMTP_PASSWORD }}             # Corrected parameter name
          secure: false
