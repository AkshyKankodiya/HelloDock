name: HelloDock Smoke Tess S3 bucket

on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: Select The Environment URL
        options:
          - https://qa.hellodock.com/
          - https://dev.hellodock.com/
          - https://app.hellodock.com/

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright browsers
        run: npx playwright install

      - name: Install Playwright Allure
        run: npm install --save-dev allure-playwright

      - name: Run Playwright tests
        env:
          BASE_URL: ${{ github.event.inputs.choice }}
        run: |
          npx playwright test --reporter=line,allure-playwright || true

      ## Upload the results as artifacts
      - name: Upload Playwright test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/test-results/**'

      - name: Upload Allure Results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: ./allure-results

      - name: Get Build URL
        run: |
          echo "The Build URL is: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      ## Configure AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      ## Upload results to S3
      - name: Upload Playwright test results to S3
        run: |
          aws s3 cp ./test-results/ s3://hellodock-testing/test-results/ --recursive

      - name: Upload Allure report to S3
        run: |
          aws s3 cp ./allure-results/ s3://hellodock-testing/allure-results/ --recursive

      ## Send email notification with Allure link
      - name: Send email notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          from: Hellodock Team <no-reply@hellodock.com>
          to: rahul.trello2020@gmail.com
          subject: "Test Automation Build Job Status: ${{ job.status }}"
          body: |
            Hello Team,

            The build process for your smoke test is completed. Please use the below URL to view results.

            Build URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            Environment: ${{ github.event.inputs.choice }}

            Thanks,
            HelloDock Automation Team
          server_address: email-smtp.us-east-2.amazonaws.com
          server_port: 587
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASSWORD }}
          secure: false

  publish:
    runs-on: windows-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Allure Results
        uses: actions/download-artifact@v3
        with:
          name: allure-results
          path: allure-results

      - name: Install Allure CLI
        run: |
          npm install -g allure-commandline --save-dev
          allure --version

      - name: Generate Allure Report
        run: |
          allure generate allure-results -o allure-report

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report

      - name: Print Allure Report URL
        run: |
          echo "Allure report is available at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
