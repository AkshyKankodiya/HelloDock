name: Playwright Tests4
on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: Select The Environment URL
        options:
          - https://dev.hellodock.com/
          - https://qa.hellodock.com/
          - https://app.hellodock.com/

jobs:
  test:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: npm install

   # - name: Install Playwright browsers
   #   run: npx playwright install

    - name: Run Playwright tests
      run: npx playwright test || true

     ## Upload the results as artifacts
    - name: Upload Playwright test results
      uses: actions/upload-artifact@v3
      with:
       name: test-results
       path: '**/test-results/**'
    
    - name: Get Build URL
      run: |
         echo "The Build URL is: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

     ## Send email notification with Allure link
    - name: Send email notification
      if: always()
      uses: dawidd6/action-send-mail@v3
      with:
         from: Rahul <no-reply@hellodock.com>
         to: rahul.trello2020@gmail.com
         subject: Playwright Build Completed
         body: |
           Hello Rahul,

           The build process for your Playwright TypeScript project has completed. Please check the results.

           - Build URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

           Thanks,
           HelloDock Automation Team
         server_address: email-smtp.us-east-2.amazonaws.com
         server_port: 587
         username: ${{ secrets.SMTP_USER }}
         password: ${{ secrets.SMTP_PASSWORD }}
         secure: false



    - name: Upload Allure results
      uses: actions/upload-artifact@v3
      with:
        name: allure-results
        path: allure-results

  allure-report:
    runs-on: windows-latest
    needs: test

    steps:
    - name: Download Allure Results
      uses: actions/download-artifact@v3
      with:
        name: allure-results

    - name: Install Allure
      run: |
        npm install -g allure-commandline

    - name: Generate Allure Report
      run: |
        allure generate allure-results --clean -o allure-report

    - name: Deploy Allure Report to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-report

    - name: Print Allure Report URL
      run: |
          echo "Allure report is available at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
      

      
