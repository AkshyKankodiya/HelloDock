name: HelloDock Smoke Test S3 bucket new builds

on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: Select The Environment URL
        options:
          - https://qa.hellodock.com/
          - https://dev.hellodock.com/
          - https://app.hellodock.com/

      download:
        type: boolean
        description: Download the test results and report from S3
        default: false

jobs:
  test:
    runs-on: windows-latest
    if: ${{ github.event.inputs.download == false }} # Only run tests if download option is false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright Allure
        run: npm install --save-dev allure-playwright

      - name: Install AWS CLI
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://awscli.amazonaws.com/AWSCLIV2.msi" -OutFile "AWSCLIV2.msi"
          Start-Process msiexec.exe -ArgumentList '/i AWSCLIV2.msi /quiet /norestart' -Wait
          Remove-Item -Path "AWSCLIV2.msi"
          aws --version

      - name: Run Playwright tests
        env:
          BASE_URL: ${{ github.event.inputs.choice }}
        run: |
          npx playwright test --reporter=line,allure-playwright || true

      - name: Get Build URL
        run: |
          echo "The Build URL is: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: Validate directories exist
        run: |
          if [ ! -d "./test-results" ]; then echo "Test results directory does not exist"; exit 1; fi
          if [ ! -d "./allure-results" ]; then echo "Allure results directory does not exist"; exit 1; fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload Playwright test results to S3
        run: |
          aws s3 cp ./test-results/ s3://hellodock-testing/test-results/ --recursive

      - name: Upload Allure report to S3
        run: |
          aws s3 cp ./allure-results/ s3://hellodock-testing/allure-results/ --recursive

      - name: Send email notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          from: Hellodock Team <no-reply@hellodock.com>
          to: rahul.trello2020@gmail.com
          subject: "Test Automation Build Job Status: ${{ job.status }}"
          body: |
            Hello Team,

            The build process for your smoke test is completed. Please use the below URLs to view the results:

            Playwright test results: https://s3.amazonaws.com/hellodock-testing/test-results/
            Allure report: https://s3.amazonaws.com/hellodock-testing/allure-results/

            Build URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            Environment: ${{ github.event.inputs.choice }}

            Thanks,
            HelloDock Automation Team
          server_address: email-smtp.us-east-2.amazonaws.com
          server_port: 587
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASSWORD }}
          secure: false

  download:
    runs-on: windows-latest
    if: ${{ github.event.inputs.download == true }} # Only run if download option is selected

    steps:
      - name: Install AWS CLI
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://awscli.amazonaws.com/AWSCLIV2.msi" -OutFile "AWSCLIV2.msi"
          Start-Process msiexec.exe -ArgumentList '/i AWSCLIV2.msi /quiet /norestart' -Wait
          Remove-Item -Path "AWSCLIV2.msi"
          aws --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Download Playwright test results from S3
        run: |
          aws s3 cp s3://hellodock-testing/test-results/ ./test-results --recursive

      - name: Download Allure report from S3
        run: |
          aws s3 cp s3://hellodock-testing/allure-results/ ./allure-results --recursive

      - name: List Downloaded Files
        run: |
          echo "Downloaded Playwright test results:"
          ls -R ./test-results
          
          echo "Downloaded Allure report:"
          ls -R ./allure-results
